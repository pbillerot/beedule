# http://golang.io/fr/tutoriels/deployer-un-serveur-go-avec-docker/
# https://www.cloudreach.com/en/resources/blog/cts-build-golang-dockerfiles/

# ETAPE COMPILATION
# Utilisation de golang pour compiler le projet beedule
# Le GOPATH par défaut de cette image est /go.
FROM golang:alpine as goalpine

# Installation de GCC et GIT
RUN apk add build-base git

# Installation de beedule
WORKDIR /src
RUN git clone https://github.com/pbillerot/beedule.git
# RUN git clone git@pbillerot.freeboxos.fr:pbillerot/beedule.git
# RUN git clone https://pbillerot.freeboxos.fr/gitea/pbillerot/beedule.git
WORKDIR /src/beedule

# Build avec CGO
RUN GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o /src/beedule/beedule

# ETAPE GENERATION D'UN IMAGE 
# avec le projet + hugo
FROM alpine
RUN mkdir -p /src/beedule
copy --from=goalpine /src/beedule /src/beedule
# Installation de hugo...
RUN apk add --update curl git hugo nano tree

# Pont d'entrée
WORKDIR /src/beedule
ENTRYPOINT ./beedule

# Le port sur lequel notre serveur écoute
EXPOSE 3945

# docker image build -t beedule:latest .
# docker container run --name beedule -p 3945:3945 -d beedule:latest
# http://localhost:3945
# docker container ps
# docker container stop beedule
# docker container start beedule
