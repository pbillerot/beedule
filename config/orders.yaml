# Table des ordres : orders
setting:
  alias-db: picsou
  key: orders_id
  col-display: "orders_ptf_id"
  icon-name: "shopping cart"

views:
  vgraph:
    title: "Achats en graphique"
    type: "image"
    icon-name: "shopping cart"
    form-edit: "feditbuy"
    form-view: "fviewbuy"
    deletable: false
    hide: false
    where: "orders_order = 'buy'"
    class-sql: "select case when {orders_cost_price} + {orders_cost_price} * {__optimum} < {orders_quote} then 'positive' when {orders_cost_price} < {orders_quote} then 'blue' else 'negative' end || ' crud-card-view2'"
    pre-update-sql:
      - "update orders set orders_quote = (select close from quotes where id = orders_ptf_id and date = (select max(date) from quotes where id = orders_ptf_id))"
      - "update orders set orders_gain = orders_quote * orders_quantity - orders_buy * orders_quantity - orders_buy * orders_quantity * {__cost} - orders_quote * orders_quantity * {__cost}"
      - "update orders set orders_gainp = (orders_gain / (orders_buy * orders_quantity)) * 100"
      - "update orders set orders_debit = orders_buy * orders_quantity + orders_buy * orders_quantity * {__cost}"
    elements:
      orders_id:
        order: 1
        hide: true
      orders_ptf_id:
        order: 10
        hide: true
      orders_order:
        order: 20
        hide: true
      orders_cost_price:
        order: 30
        hide: true
      orders_optimum:
        order: 40
        hide: true
      orders_quote:
        order: 40
        hide: true
      _chart_quotes:
        order: 100
  vachat:
    title: "Achat"
    icon-name: "shopping cart"
    form-add: "feditbuy"
    form-edit: "feditbuy"
    form-view: "fviewbuy"
    deletable: true
    hide: false
    where: "orders_order = 'buy'"
    class-sql: "select case when {orders_cost_price} + {orders_cost_price} * {__optimum} < {orders_quote} then 'positive' when {orders_cost_price} < {orders_quote} then 'blue' else 'negative' end"
    pre-update-sql:
      - "update orders set orders_quote = (select close from quotes where id = orders_ptf_id and date = (select max(date) from quotes where id = orders_ptf_id))"
      - "update orders set orders_gain = orders_quote * orders_quantity - orders_buy * orders_quantity - orders_buy * orders_quantity * {__cost} - orders_quote * orders_quantity * {__cost}"
      - "update orders set orders_gainp = (orders_gain / (orders_buy * orders_quantity)) * 100"
      - "update orders set orders_debit = orders_buy * orders_quantity + orders_buy * orders_quantity * {__cost}"
    mask:
      header:
        - orders_ptf_id
      meta:
        - orders_time
      description:
        - orders_rem
      extra:
        - ptf_quote
        - ptf_gain
        - orders_gain
        - orders_gainp
    elements:
      orders_id:
        order: 1
        hide-on-mobile: true
      orders_ptf_id:
        order: 10
      orders_time:
        order: 30
        hide-on-mobile: true
      orders_buy:
        order: 40
        hide-on-mobile: true
      orders_cost_price:
        order: 80
        hide-on-mobile: true
      orders_optimum:
        order: 100
        hide-on-mobile: true
      orders_quote:
        order: 110
        hide-on-mobile: true
      orders_gain:
        order: 120
      orders_gainp:
        order: 130
      ptf_quote:
        order: 140
      ptf_gain:
        order: 150
      orders_rem:
        order: 160
        hide-on-mobile: true
  vvente:
    title: "Vente"
    icon-name: "trophy"
    form-edit: "feditbuy"
    form-view: "fviewsell"
    deletable: true
    where: "orders_order = 'sell'"
    mask:
      header:
        - orders_ptf_id
      meta:
        - orders_time
        - orders_sell_time
      description:
        - orders_rem
      extra:
        - orders_sell_gain
        - orders_sell_gainp
    elements:
      orders_id:
        order: 1
        hide-on-mobile: true
      orders_ptf_id:
        order: 10
      orders_time:
        order: 30
        hide-on-mobile: true
      orders_sell_time:
        order: 40
        hide-on-mobile: true
      orders_buy:
        order: 60
        hide-on-mobile: true
      orders_sell:
        order: 70
        hide-on-mobile: true
      orders_quantity:
        order: 80
        hide-on-mobile: true
      orders_sell_cost:
        order: 90
        hide-on-mobile: true
      orders_credit:
        order: 100
        hide-on-mobile: true
      orders_sell_gain:
        order: 110
      orders_sell_gainp:
        order: 120
        hide-on-mobile: true

forms:
  fviewbuy:
    title: "Ordre d'achat"
    elements:
      # Achat
      orders_id:
        order: 1
      orders_ptf_id:
        order: 10
      orders_order:
        order: 20
      orders_time:
        order: 30
      orders_buy:
        order: 50
      orders_cost:
        order: 60
      orders_quantity:
        order: 40
      orders_debit:
        order: 80
      # Evolution
      _section_achat_situation:
        order: 100
        type: section
        label-long: "Ã‰volution"
        params:
          form: "frem"
          icon-name: "balance scale left"
      orders_cost_price:
        order: 110
      orders_optimum:
        order: 120
      orders_quote:
        order: 130
      _refresh_buy:
        order: 135
      orders_gain:
        order: 140
      orders_gainp:
        order: 150
      orders_rem:
        order: 170
      _action_sell:
        order: 270
      # Images
      _chart_quotes:
        order: 310
      _image_analyse:
        order: 320

  fviewsell:
    title: "Ordre de vente"
    elements:
      # Achat
      _section_achat:
        order: 10
        type: section
        label-long: "Achat"
        params:
          form: "feditbuy"
          icon-name: "money check"
      orders_id:
        order: 15
      orders_ptf_id:
        order: 10
      orders_order:
        order: 20
      orders_time:
        order: 30
      orders_buy:
        order: 50
      orders_cost:
        order: 60
      orders_cost_price:
        order: 62
      orders_optimum:
        order: 64
      orders_quantity:
        order: 40
      orders_debit:
        order: 80
      # Vente
      _section_vente:
        order: 200
        type: section
        label-long: "Vente"
        label-short: "Vente"
        params:
          form: "feditsell"
          icon-name: "money check"
      orders_sell_time:
        order: 210
      orders_sell:
        order: 220
      orders_sell_cost:
        order: 230
      orders_credit:
        order: 240
      orders_sell_gain:
        order: 250
      orders_sell_gainp:
        order: 260
      # Images
      _image_analyse:
        order: 320
      _chart_quotes:
        order: 330

  feditbuy:
    title: "Ordre d'achat"
    Group: "trader"
    elements:
      orders_id:
        order: 1
      orders_ptf_id:
        order: 10
        required: true
      orders_order:
        order: 20
        default: "buy"
      orders_time:
        order: 30
        required: true
      orders_quote:
        order: 40
        read-only: true
      orders_buy:
        order: 50
        required: true
      orders_quantity:
        order: 60
        required: true
      orders_debit:
        order: 70
    post-sql:
      - "update orders set orders_quote = (select close from quotes where id = orders_ptf_id and date = (select max(date) from quotes where id = orders_ptf_id))"
      - "update orders set orders_gain = orders_quote * orders_quantity - orders_buy * orders_quantity - orders_buy * orders_quantity * {__cost} - orders_quote * orders_quantity * {__cost}"
      - "update orders set orders_gainp = (orders_gain / (orders_buy * orders_quantity)) * 100"
      - "update orders set orders_debit = orders_buy * orders_quantity + orders_buy * orders_quantity * {__cost}"
      - "update orders set orders_cost = orders_buy * orders_quantity * {__cost}"
      - "update orders set orders_cost_price = (orders_buy * orders_quantity + orders_buy * orders_quantity * ({__cost}*2))/orders_quantity"

  feditsell:
    title: "Ordre de vente"
    Group: "trader"
    elements:
      orders_id:
        order: 1
      orders_ptf_id:
        order: 10
      orders_order:
        order: 20
      orders_sell_time:
        order: 30
      orders_quote:
        order: 40
      orders_sell:
        order: 50
      orders_quantity:
        order: 60
      orders_credit:
        order: 70
      orders_sell_gain:
        order: 80
      orders_sell_gainp:
        order: 90
    post-sql:
      - "update orders set orders_sell_cost = orders_buy * orders_quantity * {__cost} + orders_sell * orders_quantity * {__cost}"
      - "update orders set orders_sell_gain = orders_sell * orders_quantity - orders_buy * orders_quantity - orders_buy * orders_quantity * {__cost} - orders_sell * orders_quantity * {__cost}"
      - "update orders set orders_sell_gainp = (orders_sell_gain / (orders_buy * orders_quantity)) * 100"
      - "update orders set orders_credit = orders_sell * orders_quantity + orders_sell * orders_quantity * {__cost}"

  frem:
    title: "Remarques"
    Group: "trader"
    elements:
      orders_id:
        order: 1
      orders_ptf_id:
        order: 10
      orders_rem:
        order: 20

elements:
  ptf_quote:
    type: amount
    label-long: "Quote"
    label-short: "Quote"
    jointure:
      join: "left outer join ptf on ptf_id = orders_ptf_id"
      column: "ptf.ptf_quote"
  ptf_gain:
    type: "percent"
    label-long: "Gain du jour"
    label-short: "Gain du jour"
    jointure:
      # join: "left outer join ptf on ptf_id = orders_ptf_id
      column: "ptf.ptf_gain"
    class-sql: "select case when {ptf_gain} > 0 then 'green' when {ptf_gain} < 0 then 'red' end"
  _refresh_buy:
    type: action
    label-long: "Mettre Ã  jour avec le cours du jour"
    actions:
      - sql:
        - "update orders set orders_quote = (select close from quotes where id = orders_ptf_id and date = (select max(date) from quotes where id = orders_ptf_id))"
        - "update orders set orders_gain = orders_quote * orders_quantity - orders_buy * orders_quantity - orders_buy * orders_quantity * {__cost} - orders_quote * orders_quantity * {__cost}"
        - "update orders set orders_gainp = (orders_gain / (orders_buy * orders_quantity)) * 100"
  _action_sell:
    type: "button"
    Group: "trader"
    label-long: "Vendre cette valeur..."
    params:
      url: "/bee/edit/picsou/orders/vachat/feditsell/{orders_id}?orders_order=sell&orders_sell={orders_quote}"
  orders_id:
    type: counter
    label-long: "NÂ°"
    label-short: "NÂ°"
    col-align: center
  orders_ptf_id:
    type: combobox
    label-long: "Valeur"
    label-short: "Valeur"
    items-sql: "SELECT ptf_id as 'key', ptf_name as 'label' From ptf order by ptf_name"
  _ptf_isin:
    type: text
    label-long: "Code ISIN"
    label-short: "ISIN"
    # compute-sql: "SELECT ptf_isin From ptf where ptf_id = '{orders_ptf_id}'"
    jointure:
      join: "LEFT OUTER join ptf on ptf.ptf_id = orders.orders_ptf_id"
      column: ptf_isin
  orders_order:
    type: combobox
    label-long: "order"
    label-short: "order"
    col-align: center
    required: true
    items:
      - key: "buy"
        label: "Achat"
      - key: "sell"
        label: "Vente"
  orders_rem:
    type: textarea
    label-long: "Remarque"
    label-short: "Rem."
  orders_time:
    type: datetime
    label-long: "Jour Heure d'achat"
    label-short: "JH d'achat"
    default-sql: "select datetime('now', 'localtime')"
  orders_sell_time:
    type: datetime
    label-long: "Jour Heure de vente"
    label-short: "JH de vente"
    default-sql: "select datetime('now', 'localtime')"
  orders_quote:
    type: amount
    label-long: "Cours du jour"
    label-short: "Cours J"
    protected: true
  orders_quantity:
    type: number
    label-long: "QuantitÃ©"
    label-short: "Qt"
    required: true
    refresh: true
    default-sql: "select '{__amount_min}' / '{orders_buy}'"
  orders_buy:
    type: amount
    label-long: "Cours d'achat"
    label-short: "Achat Ã "
    required: true
    refresh: true
  orders_sell:
    type: amount
    label-long: "Cours de vente"
    label-short: "Vente Ã "
    default-sql: "select '{orders_quote}'"
    required: true
    refresh: true
  orders_cost_price:
    type: amount
    label-long: "Prix de revient"
    label-short: "Revient"
    col-with: 80
    protected: true
    # compute-sql: "({orders_buy} * {orders_quantity} + {orders_buy} * {orders_quantity} * ({__cost}*2))/{orders_quantity"
  orders_cost:
    type: amount
    label-long: "Frais"
    label-short: "Frais"
    col-with: 60
    protected: true
    # compute-sql: "orders_buy * orders_quantity * {__cost}"
  orders_debit:
    type: amount
    label-long: "DÃ©bit"
    label-short: "DÃ©bit"
    col-with: 80
    protected: true
    compute-sql: "select '{orders_buy}' * '{orders_quantity}' + '{orders_buy}' * '{orders_quantity}' * '{__cost}'"
  orders_credit:
    type: amount
    label-long: "CrÃ©dit"
    label-short: "CrÃ©dit"
    col-with: 80
    protected: true
    # compute-sql: "select {orders_sell} * {orders_quantity} + {orders_sell} * {orders_quantity} * {__cost}"
  orders_optimum:
    type: amount
    label-long: "Optimum"
    label-short: "Optimum"
    protected: true
    jointure:
      column: "orders_cost_price + orders_cost_price * {__optimum}"
    # compute-sql: "select {orders_cost_price} + {orders_cost_price} * {__optimum}"
  orders_gain:
    type: amount
    label-long: "Gain"
    label-short: "Gain"
    col-with: 80
    protected: true
    class-sql: "select case when {orders_gain} > 0 then 'green' when {orders_gain} < 0 then 'red' end"
    # compute-sql: "select {orders_quote} * {orders_quantity} - {orders_buy} * {orders_quantity} - {orders_buy} * {orders_quantity} * {__cost} - {orders_quote} * {orders_quantity} * {__cost}"
  orders_gainp:
    type: percent
    label-long: "Gain en %"
    label-short: "en %"
    col-with: 80
    protected: true
    class-sql: "select case when {orders_gainp} > 0 then 'green' when {orders_gainp} < 0 then 'red' end"
    # compute-sql: "select ( ({orders_quote} * {orders_quantity} - {orders_buy} * {orders_quantity} - {orders_buy} * {orders_quantity} * {__cost} - {orders_quote} * {orders_quantity} * {__cost}) / ({orders_buy} * {orders_quantity}) )*100"
  orders_sell_cost:
    type: amount
    label-long: "Frais"
    label-short: "Frais"
    col-with: 60
    protected: true
    # compute-sql: "select {orders_buy} * {orders_quantity} * {__cost} + {orders_sell} * {orders_quantity} * {__cost}"
  orders_sell_gain:
    type: amount
    label-long: "Gain"
    label-short: "Gain"
    col-with: 80
    protected: true
    class-sql: "select case when {orders_sell_gain} > 0 then 'green' when {orders_sell_gain} < 0 then 'red' end"
    # compute-sql: "select {orders_sell} * {orders_quantity} - {orders_buy} * {orders_quantity} - {orders_buy} * {orders_quantity} * {__cost} - {orders_sell} * {orders_quantity} * {__cost}"
  orders_sell_gainp:
    type: percent
    label-long: "Gain en %"
    label-short: "en %"
    col-with: 80
    protected: true
    class-sql: "select case when {orders_sell_gainp} > 0 then 'green' when {orders_sell_gainp} < 0 then 'red' end"
    # compute-sql: "select ( ({orders_sell} * {orders_quantity} - {orders_buy} * {orders_quantity} - {orders_buy} * {orders_quantity} * {__cost} - {orders_sell} * {orders_quantity} * {__cost}) / ({orders_buy} * {orders_quantity}) )*100"
  _image_day:
    type: image
    label-long: "Graph du jour"
    label-short: "Graph J"
    params:
      path: "/bee/data/picsou/png/day/{orders_ptf_id}.png"
      url: "/bee/data/picsou/png/day/{orders_ptf_id}.png"
      icon-name: "emblem-photos"
  _image_histo:
    type: image
    label-long: "Historique sur 1 mois"
    label-short: "Histo"
    params:
      path: "/bee/data/picsou/png/quotes/{orders_ptf_id}.png"
      url: "/bee/data/picsou/png/quotes/{orders_ptf_id}.png"
      icon-name: "emblem-photos"
  _image_analyse:
    type: image
    label-long: "Analyse sur 7 mois"
    label-short: "Analyse"
    params:
      path: "/bee/data/picsou/png/ana/{orders_ptf_id}.gif"
      url: "/bee/data/picsou/png/ana/{orders_ptf_id}.gif"
      icon-name: "emblem-photos"
  _yahoo:
    type: url
    label-long: "Lien vers Yahoo"
    label-short: "Yahoo"
    params:
      url: "https:#fr.finance.yahoo.com/chart/{orders_ptf_id}"
      icon-name: "applications-internet"
  _chart_quotes:
    type: image
    label-long: "Cotation sur 1 mois"
    label-short: "Cotation"
    dataset:
      classjquery: "select 'bee-chart-quotes'"
      title: "select 'Cours de {orders_ptf_id}'"
      quotes: "select open as matin, close as soir from quotes where id = '{orders_ptf_id}' order by date"
      quotep: "select (open-close1)*100/close1 as matin, (close-close1)*100/close1 as soir from quotes where id = '{orders_ptf_id}' order by date"
      labels: "select printf('%s-%s',substr(date,9,2),substr(date,6,2)) as 'matin', '-' as 'soir' from quotes where id = '{orders_ptf_id}' order by date"
      minp: "select (low-close1)*100/close1 as matin, (low-close1)*100/close1 as soir from quotes where id = '{orders_ptf_id}' order by date"
      maxp: "select (high-close1)*100/close1 as matin, (high-close1)*100/close1 as soir from quotes where id = '{orders_ptf_id}' order by date"
      min: "select min(low) as min from quotes where id = '{orders_ptf_id}'"
      max: "select max(high) as max from quotes where id = '{orders_ptf_id}'"
      seuilv: "select '{orders_optimum}' where '{orders_order}' = 'buy'"
      seuilr: "select '{orders_cost_price}' where '{orders_order}' = 'buy'"
