[{"categories":null,"contents":"   BEEDULE est un framework de développement d\u0026rsquo;application WEB et un serveur d\u0026rsquo;application WEB\nC\u0026rsquo;est un CRUD pour réaliser des opérations de base sur des données :\n Create : créer Read : lire Update : mettre à jour Delete : supprimer  Le moteur Beedule va réaliser des INSERT, SELECT, UPDATE et DELETE sur des bases de données Mysql, Sqlite, Oracle ou Postgres\nLe développeur d\u0026rsquo;application Beedule ne devra connaître qu\u0026rsquo;un seul langage, le langage SQL.\nLes opérations à réaliser, les listes et formulaires seront décrits dans des fichiers textes au format YAML que nous appelerons le dictionnaire.\nL\u0026rsquo;objectif du guide est de vous présenter :\n comment installer Beedule sur un serveur dans un container DOCKER la structure du dictionnaire l\u0026rsquo;éditeur du dictionnaire  \u0026ndash;\u0026gt; Guide Utilisation\n","permalink":"/bee/help/posts/intro/","tags":["intro"],"title":"Introduction"},{"categories":null,"contents":"Touches fonctions  ctrl+s : sauvegarde du document\nctrl+/ : mise en commentaire de la méta-données\nctrl+espace : liste et complétion des mots-clés et rubriques\n","permalink":"/bee/help/posts/dico-portail-help/","tags":["editeur"],"title":"Dictionnaire - Portail"},{"categories":null,"contents":"Touches fonctions  ctrl+s : sauvegarde du document\nctrl+/ : mise en commentaire de la méta-données\nctrl+espace : liste et complétion des mots-clés et rubriques\n","permalink":"/bee/help/posts/dico-table-help/","tags":["editeur"],"title":"Dictionnaire - Table"},{"categories":null,"contents":"Guide pour l\u0026rsquo;administrateur technique\n  Je vous propose d\u0026rsquo;installer une plateforme complète pour héberger notre application Beedule.\nNous utiliserons une VM (Machine Virtuelle) DEBIAN 10 avec le gestionnaire de conteneur Docker installé.\nCe document ne décrit pas l\u0026rsquo;installation d\u0026rsquo;une VM Debian et de Docker.\nPour ma part je loue une VPS Debian 10 Docker chez l\u0026rsquo;hébergeur OVH (1 vCore 2 Go 20 Go 1 domaine.eu pour 46.16 €/an)\nPrérequis du système hôte Système : Debian Buster\n\u0026gt;uname -a Linux vps-7d2d773f 4.19.0-16-cloud-amd64 #1 SMP Debian 4.19.181-1 (2021-03-19) x86_64 GNU/Linux Gestionnaire de conteneur Docker :\n\u0026gt;docker version Client: Docker Engine - Community Version: 20.10.5 API version: 1.41 Go version: go1.13.15 ... Server: Docker Engine - Community Engine: Version: 20.10.5 API version: 1.41 (minimum version 1.12) Go version: go1.13.15 ... \u0026gt;docker-compose version docker-compose version 1.21.0, build unknown docker-py version: 3.4.1 CPython version: 3.7.3 OpenSSL version: OpenSSL 1.1.1d 10 Sep 2019 La plateforme Docker   Notre plateforme sera composée de 4 containers :\n  Caddy Server le frontal web, c\u0026rsquo;est l\u0026rsquo;élément le plus important. Il sera chargé :  de contrôler le trafic http (:80) et https (:443) de renouveller le certificat lié au nom de domaine de gérer les authentifications pour certaines URI de rediriger les flux vers les autres containers en fonction des URI de journaliser les accès et les erreurs   Beedule le container qui va servir l\u0026rsquo;application Beedule  Pour plus de confort, j\u0026rsquo;utilise\n  Portainer pour gérer graphiquement l\u0026rsquo;environnement Docker  Filebrowser pour manipuler les fichiers du répertoire partagé (volshare)  Les 4 containers ont accès à la même ressource de fichiers volshare et les échanges entre Caddy Server et les autres containers se font à travers le réseau privé web. Ces containers ne sont pas accessibles de l\u0026rsquo;extérieur.\nLa configuration de Docker se fait à travers le fichier /volshare/docker/docker-compose.yaml, Caddy Server via /volshare/docker/caddy/caddyfile.conf\nNous allons détailler tout cela ci-aprés.\nVolume partagé /volshare /volshare est le répertoire partagé entre tous les containers.\nIl aura la structure suivante :\n/volshare\r/logs\raccess.log access.0.log ... access.9.log\r/etc\r(les certificats du domaine)\r/bivouac\r(le site web Hugo administré par Victor)\r/filebrowser\rdatabase.db\r/data (le répertoire des données à sauvegarder)\r/store\r(le répertoire des fichiers statiques servi par Caddy)\r/beedic\rle répertoire du dictionnaire de l'application beedule\r/docker (les fichiers de configuration des containers)\rdocker-compose.yaml\r/caddy\rcaddyfile.conf\r/filebrowser\rfilebrowser.conf\r/beedule\rdocker-compose.yaml\rdockerfile\rcustom.conf\rbuild.sh\rContainer Filebrowser    Filebrowser est un explorateur de fichiers en ligne.\nNous allons le régler pour explorer le répertoire /volshare du système hôte via l\u0026rsquo;url /fb\n/volshare/docker/docker-compose.yaml filebrowser:image:filebrowser/filebrowser:latestcontainer_name:filebrowserrestart:unless-stoppedvolumes:- /volshare:/srv- /volshare/filebrowser/database.db:/database.db- ./filebrowser/filebrowser.json:/.filebrowser.json networks:- web/volshare/docker/filebrowser/filebrowser.json { \u0026#34;port\u0026#34;: 80, \u0026#34;baseURL\u0026#34;: \u0026#34;/fb\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;log\u0026#34;: \u0026#34;stdout\u0026#34;, \u0026#34;database\u0026#34;: \u0026#34;/database.db\u0026#34;, \u0026#34;root\u0026#34;: \u0026#34;/srv\u0026#34;, } /volshare/docker/caddy/caddyfile.conf # filebrowser /fb redir /fb /fb/ reverse_proxy /fb/* filebrowser:80 Container Portainer    Portainer via son interface web permet de visualiser les ressources de la plateforme Docker, les containers, les images, les volumes, le réseau.\n/volshare/docker/docker-compose.yaml portainer:image:portainer/portainer-cecontainer_name:portainercommand:-H unix:///var/run/docker.sockrestart:unless-stoppedvolumes:- /var/run/docker.sock:/var/run/docker.socknetworks:- web/volshare/docker/caddy/caddyfile.conf # portainer  # on supprime le préfix /portainer après le routage redir /portainer /portainer/ route /portainer/* { uri strip_prefix /portainer reverse_proxy portainer:9000 } Container Beedule   Ce container va héberger l\u0026rsquo;application Beedule libre d\u0026rsquo;utilisation sur Github.\nBeedule a été écrit dans le langage Golang.\nÀ noter que les 4 containers et Docker lui-même ont été développés en Golang\n/volshare/docker/beedule/docker-compose.yaml version:\u0026#34;3.3\u0026#34;services:beedule:build:context:.image:beedulecontainer_name:beedulerestart:unless-stoppeduser:1000:1000# ports:# - \u0026#34;7601:3945\u0026#34;volumes:- /volshare:/volshare- ./custom.conf:/src/beedule/conf/custom.confnetworks:- docker_webvolumes:certs:networks:docker_web:external:true/volshare/docker/beedule/custom.conf # db default ou Tables.dataSource Tables.driverName # [alias] # drivertype 1:Mysql 2:Sqlite 3:Oracle 4:Postgres #debug = false # pour avoir les traces des requêtes sql EnableXSRF = true runmode = \u0026#34;production\u0026#34; # répertoire du dictionnaire dicodir = \u0026#34;/volshare/beedic/config\u0026#34; # !!! Attention # la section représente  # - l\u0026#39;application et en même temps l\u0026#39;alias du connecteur à la base de données # - la définition du connecteur à la base de données # - le chemin du répertoire des fichiers [admin] drivertype = 2 datasource = \u0026#34;/volshare/data/beedule/beedule.sqlite\u0026#34; drivername = \u0026#34;sqlite3\u0026#34; datadir = \u0026#34;/volshare/data/beedule/admin\u0026#34;  [picsou] drivertype = 2 # datasource = .\u0026#34;/database/picsou.sqlite\u0026#34; datasource = \u0026#34;/volshare/data/picsou/picsou.sqlite\u0026#34; drivername = \u0026#34;sqlite3\u0026#34; datadir = \u0026#34;/volshare/data/picsou\u0026#34; /volshare/docker/caddy/caddyfile.conf # beedule redir /bee /bee/ reverse_proxy /bee/* beedule:3945 Image Beedule Ci-après le script qui permet de construire l\u0026rsquo;image Beedule.\nÀ noter que ce container intègre le moteur Hugo et des utilitaires Git SSH et Ftp pour déployer les sites sur des serveurs externes\n/volshare/docker/victor/dockerfile # ETAPE COMPILATION# Utilisation de golang pour compiler le projet beedule# Le GOPATH par défaut de cette image est /go.FROMgolang:1.15-alpine as goalpine# Installation de GCC et GITRUN apk add build-base git# Installation de beeduleWORKDIR/srcRUN git clone https://github.com/pbillerot/beedule.gitWORKDIR/src/beedule# Build avec CGORUN GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o /src/beedule/beedule# ETAPE GENERATION D\u0026#39;UNE IMAGE avec seulement le module compiléFROMalpineRUN mkdir -p /src/beedulecopy --from=goalpine /src/beedule /src/beeduleRUN apk add --update nano# Pont d\u0026#39;entréeWORKDIR/src/beeduleENTRYPOINT ./beedule# Le port sur lequel notre serveur écouteEXPOSE3945/volshare/docker/victor/build.sh # Construction de l\u0026#39;image docker-compose up -d --build docker image prune -f Container Caddy /volshare/docker/docker-compose.yaml Version complète\nÀ seul ce container présente des ports accessible de l\u0026rsquo;extérieur (ports 80 et 443)\nversion:\u0026#34;3.3\u0026#34;services:caddy:# https://hub.docker.com/_/caddy?tab=descriptionimage:caddy:latestcontainer_name:caddyrestart:unless-stoppedports:- \u0026#39;80:80\u0026#39;- \u0026#39;443:443\u0026#39;volumes:- \u0026#39;./caddy/caddyfile.conf:/etc/caddy/Caddyfile\u0026#39;- \u0026#39;/volshare/etc:/data\u0026#39;- \u0026#39;/volshare/data/store:/srv\u0026#39;- \u0026#39;/volshare:/volshare\u0026#39;networks:- webfilebrowser:...portainer:...volumes:certs:networks:web:driver:bridge/volshare/docker/caddy/caddyfile.conf Version complète\nDans ce fichier on trouvera :\n l'email qui sera utilisé pour demander le certificat SSL du domaine le nom du domaine du site éventuellement la liste de d\u0026rsquo;adresses IP indésirables les répertoires servis par l\u0026rsquo;explorateur web intégré à Caddy Server les fichiers logs et enfin les différents reverse_proxy redirigés vers nos containers (qui ont été détaillés plus haut)  # Configuration du serveur Caddy # https://caddyserver.com/docs/ # GLOBAL option # https://www.ssllabs.com/ssltest/analyze.html?d=mon.domaine.com { email mon.email@gmail.com } # HOST mon.domaine.com # blacklist - sites indésirables @blaklist { remote_ip 94.130.212.180 134.119.20.10 } handle @blaklist { respond \u0026#34;Refused!\u0026#34; 403 } # Serveur de fichiers statiques redir /store /store/ handle_path /store/* { root * /volshare/data/store file_server browse } # Log du trafic (rotation automatique tous les 100 Mo (10 logs)  log { output file /volshare/log/access.log format single_field common_log } # filebrowser # ... # portainer # ... # beedule # ... Procédure d\u0026rsquo;installation cd /volshare/docker # creation/mise à jour des containers sans reconstruction des images docker-compose up -d # nettoyage des images intermédiaires docker image prune -f Démarrage de Beedule   Dans votre navigateur préféré taper l\u0026rsquo;URL :\n https://mon.domaine.fr/bee\npuis renseigner le code utilisateur et son mot de passe que vous avez configuré\net vous devriez avoir l\u0026rsquo;écran d\u0026rsquo;accueil de Beedule :\n","permalink":"/bee/help/posts/installation/","tags":["technique"],"title":"Installation de Beedule"}]